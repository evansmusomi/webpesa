var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","applicationmailer","devisehelper","sendemailjob","sendreportjob","transaction","transactionmailer","transactionscontroller","user","userscontroller","activity_report()","balance()","configure_permitted_parameters()","create()","create_top_up()","devise_error_messages!()","find_by_email_or_mobile()","find_for_database_authentication()","generate_code!()","human_date()","human_time()","index()","innocent()","money_received()","money_sent()","nav_link()","new()","new_top_up()","perform()","perform()","receipts()","received_money_email()","sends()","show()","topups()","topups_sum()","validate_amount()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","applicationmailer","devisehelper","sendemailjob","sendreportjob","transaction","transactionmailer","transactionscontroller","user","userscontroller","transactionmailer#activity_report()","user#balance()","applicationcontroller#configure_permitted_parameters()","transactionscontroller#create()","transactionscontroller#create_top_up()","devisehelper#devise_error_messages!()","user::find_by_email_or_mobile()","user::find_for_database_authentication()","transaction#generate_code!()","applicationhelper#human_date()","applicationhelper#human_time()","transactionscontroller#index()","applicationhelper#innocent()","user#money_received()","user#money_sent()","applicationhelper#nav_link()","transactionscontroller#new()","transactionscontroller#new_top_up()","sendemailjob#perform()","sendreportjob#perform()","user#receipts()","transactionmailer#received_money_email()","user#sends()","transactionscontroller#show()","user#topups()","user#topups_sum()","transaction#validate_amount()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["DeviseHelper","","DeviseHelper.html","",""],["SendEmailJob","","SendEmailJob.html","",""],["SendReportJob","","SendReportJob.html","",""],["Transaction","","Transaction.html","",""],["TransactionMailer","","TransactionMailer.html","",""],["TransactionsController","","TransactionsController.html","",""],["User","","User.html","",""],["UsersController","","UsersController.html","",""],["activity_report","TransactionMailer","TransactionMailer.html#method-i-activity_report","(user)","<p>Emails an digest (update) of recent transactions to a registered user.\n"],["balance","User","User.html#method-i-balance","()","<p>Calculates user&#39;s account balance.\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()","<p>Sets permitted input parameters that apply to to all controllers\n"],["create","TransactionsController","TransactionsController.html#method-i-create","()","<p>Creates money transfer transaction. Inputs: logged in user, recipient\n(mobile or email), amount.\n"],["create_top_up","TransactionsController","TransactionsController.html#method-i-create_top_up","()","<p>Tops up logged in user&#39;s account. Input(s): logged in user, amount.\n"],["devise_error_messages!","DeviseHelper","DeviseHelper.html#method-i-devise_error_messages-21","()","<p>Converts Devise errors into a Twitter Bootstrap friendly format\n(dismissable notices).\n"],["find_by_email_or_mobile","User","User.html#method-c-find_by_email_or_mobile","(key)","<p>Identifies user based on email address or mobile number provided.\n"],["find_for_database_authentication","User","User.html#method-c-find_for_database_authentication","(warden_conditions)","<p>Overrides Devise log in action behaviour to include use of mobile, in\naddition to email.\n"],["generate_code!","Transaction","Transaction.html#method-i-generate_code-21","()","<p>Creates unique transaction code that is 10 characters long.\n"],["human_date","ApplicationHelper","ApplicationHelper.html#method-i-human_date","(date)","<p>Converts date provided to more user friendly format.\n"],["human_time","ApplicationHelper","ApplicationHelper.html#method-i-human_time","(date)","<p>Converts time provided to more user friendly format.\n"],["index","TransactionsController","TransactionsController.html#method-i-index","()","<p>Shows list of logged in user transactions. Transaction types: money\nreceived, money sent and top ups. …\n"],["innocent","ApplicationHelper","ApplicationHelper.html#method-i-innocent","(html)","<p>Escapes HTML elements in the object provided.\n"],["money_received","User","User.html#method-i-money_received","(number = false)","<p>Calculates the sum of money a user has received and gives the result as a\nnumber or string.\n"],["money_sent","User","User.html#method-i-money_sent","(number = false)","<p>Calculates the sum of money transfers a user has made and gives the result\nas a number or string.\n"],["nav_link","ApplicationHelper","ApplicationHelper.html#method-i-nav_link","(link_text, link_path)","<p>Sets active navigation link depending on the current page.\n"],["new","TransactionsController","TransactionsController.html#method-i-new","()","<p>Displays new money transfer page. Input(s): logged in user\n"],["new_top_up","TransactionsController","TransactionsController.html#method-i-new_top_up","()","<p>Displays account top up page. Input(s): Logged in user.\n"],["perform","SendEmailJob","SendEmailJob.html#method-i-perform","(transaction)","<p>Performs queued &#39;send email&#39; task when transaction is successful.\nInput(s): Transaction.\n"],["perform","SendReportJob","SendReportJob.html#method-i-perform","(user)","<p>Performs queued &#39;send report&#39; task. Input(s): Registered user.\n"],["receipts","User","User.html#method-i-receipts","()","<p>Gets user&#39;s money receipt transactions ordered by recency.\n"],["received_money_email","TransactionMailer","TransactionMailer.html#method-i-received_money_email","(transaction)","<p>Sends registered user an email notification when they receive money.\nInput(s): Transaction\n"],["sends","User","User.html#method-i-sends","()","<p>Gets user&#39;s money transfer transactions ordered by recency.\n"],["show","TransactionsController","TransactionsController.html#method-i-show","()","<p>Shows transaction details. Input(s): Transaction ID\n"],["topups","User","User.html#method-i-topups","()","<p>Gets user&#39;s top up transactions ordered by recency.\n"],["topups_sum","User","User.html#method-i-topups_sum","(number = false)","<p>Calculates the sum of top ups a user has made and gives the result as a\nnumeber or string.\n"],["validate_amount","Transaction","Transaction.html#method-i-validate_amount","()","<p>Ensures the amount transferred is not more than what&#39;s in the account.\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}